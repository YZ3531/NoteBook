☞ switch语法

    语法：
        switch ( 变量 ) {

             case  值1:

                逻辑代码;

             break;

             case 值2:

                逻辑代码;

             break;

             default:

                逻辑代码;
             break;

        }
    switch使用场景：

        如果程序中变量属于一个具体值，不是用来表示一个范围。那么可以使用switch解决。

    switch语句执行过程：

        1. 先获取到变量中的值

        2. 判断变量中的值和case后面的值是否相等

        3. 如果相等，那么就执行对应的case后面的代码

        4. 如果不相等，那么就继续往下判断后面的值是否有相等的情况，如果有那么就执行对应的代码

        5. 如果所有的值都不相等，那么最后执行default中的代码语句。

    
    switch使用过程中需要注意的细节：

        ✔ switch 后面变量的数据类型和值 必须和case 后面的值及数据类型保持一致。

        ✔ break关键字不能省略




☞ 断点调试介绍
    
     作用： 
        1. 能够通过断点调试了解程序的执行过程。

        2. 排查程序中的逻辑问题。

     
     步骤：

         1. 先打开对应的程序页面。

         2. 打开浏览器中的控制台程序，并且选中sources选项

         3. 点击对应的HTML页面

         4. 在代码的开始位置处设置断点

         5. 再次运行程序（刷新页面）

         6. 点击F10(下一步按钮)，让程序开始执行


         重点看：
              1. 变量的值

              2. 条件表达式的结果

☞ 循环语句: 循环有反复的意思

    while循环：

        语法：  
            1. 先变量初始化。

            2.  
            while( 条件表达式 ) {

                逻辑代码（循环体代码）

            }

        执行过程：
            1. 先执行变量初始化

            2. 将该变量中的值带入到 条件表达式中

            3. 判断表达式的结果是true 还是 false

            4. 如果条件表达式的结果是true，那么程序就会立即执行循环体中的代码

            5. 如果条件表达式的结果是false,那么循环体中的代码立即结束。

            6. 条件满足就执行，条件不满足不执行。

    
    
    
    
    
    
    do..while循环

        语法：

           1.变量初始化；

           2.
           
            do {

                循环体代码

            }while(条件表达式)


        执行过程：

             1. 先执行变量初始化

             2. 执行循环体中的代码

             3. 判断条件是否满足

             4. 如果条件满足，那么继续执行循环体中的代码

             5. 如果条件不满足，那么循环体中的代码立即结束。



        ☞ do while 和 while 有区别没有？


             1. do while 循环要不 while循环多执行一次:[ 只有条件不满足的情况下，do while 循环才会比 while循
             环多次执行一次]


             2. 如果条件满足的情况下，do while循环和while循环是一样的。


    for循环【重点】:

        语法：

            for( 变量初始化;   条件表达式;  变量的自增或自减   ) {


                  循环体代码;

            }


        执行过程：

            1. 先执行变量初始化

            2. 判断条件是否满足

            3. 如果条件为true, 那么要执行循环体代码

            4. 执行完循环体代码后，然后执行变量自增或自减

            5. 变量自增（自减）过后，再判断条件是否满足，如果满足继续执行循环体中的代码

            6. 如果条件不满足，循环体中的代码不再执行。





☞ continue关键字

    1. 在循环结构中，如果程序遇到continue，会立即结束本次循环，立即进入到下一次循环【执行完continue后，后面的代码也不会执行】
    

☞ break关键字: 

     1. 在循环结构中如果写上break。那么循环会立即结束。break之后的代码不会执行。





